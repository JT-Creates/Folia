From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JT Creates <support@codingcommons.tech>
Date: Sat, 25 May 2024 13:34:52 -0400
Subject: [PATCH] merge


diff --git a/src/main/java/io/papermc/paper/plugin/configuration/PluginMeta.java b/src/main/java/io/papermc/paper/plugin/configuration/PluginMeta.java
index bcf91d048d84144f6acf9bfd2095df9ada2e585f..3072f95dc1cafb47c1820dc67c8d24991540fc4a 100644
--- a/src/main/java/io/papermc/paper/plugin/configuration/PluginMeta.java
+++ b/src/main/java/io/papermc/paper/plugin/configuration/PluginMeta.java
@@ -200,4 +200,12 @@ public interface PluginMeta {
     @Nullable
     String getAPIVersion();
 
+    // Folia start - block plugins not marked as supported
+    /**
+     * Returns whether the plugin has been marked to be compatible with regionised threading as provided
+     * by Folia
+     */
+    public boolean isFoliaSupported();
+    // Folia end - block plugins not marked as supported
+
 }
diff --git a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
index 8f45caade7357bc55c6a90cfe0c3a2feb2d877ff..1cbe41eb72d87089e3c43ba0af50cea074300df4 100644
--- a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
+++ b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
@@ -259,6 +259,7 @@ public final class PluginDescriptionFile implements io.papermc.paper.plugin.conf
     private Set<PluginAwareness> awareness = ImmutableSet.of();
     private String apiVersion = null;
     private List<String> libraries = ImmutableList.of();
+<<<<<<< HEAD
     // Paper start - plugin loader api
     private String paperPluginLoader;
     @org.jetbrains.annotations.ApiStatus.Internal @org.jetbrains.annotations.Nullable
@@ -266,6 +267,23 @@ public final class PluginDescriptionFile implements io.papermc.paper.plugin.conf
         return this.paperPluginLoader;
     }
     // Paper end - plugin loader api
+=======
+
+    // Folia start - block plugins not marked as supported
+    private String foliaSupported;
+    private static final String FOLIA_SUPPORTED_KEY = "folia-supported";
+
+    /**
+     * Returns whether the plugin has been marked to be compatible with regionised threading as provided
+     * by Folia
+     */
+    @Override
+    public boolean isFoliaSupported() {
+        return this.foliaSupported != null && this.foliaSupported.equalsIgnoreCase("true");
+    }
+    // Folia end - block plugins not marked as supported
+
+>>>>>>> Require plugins to be explicitly marked as Folia supported
     // Paper start - oh my goddddd
     /**
      * Don't use this.
@@ -1266,6 +1284,11 @@ public final class PluginDescriptionFile implements io.papermc.paper.plugin.conf
         if (map.get("prefix") != null) {
             prefix = map.get("prefix").toString();
         }
+        // Folia start - block plugins not marked as supported
+        if (map.get(FOLIA_SUPPORTED_KEY) != null) {
+            foliaSupported = map.get(FOLIA_SUPPORTED_KEY).toString();
+        }
+        // Folia end - block plugins not marked as supported
     }
 
     @NotNull
@@ -1342,6 +1365,11 @@ public final class PluginDescriptionFile implements io.papermc.paper.plugin.conf
         if (prefix != null) {
             map.put("prefix", prefix);
         }
+        // Folia start - block plugins not marked as supported
+        if (foliaSupported != null) {
+            map.put(FOLIA_SUPPORTED_KEY, foliaSupported);
+        }
+        // Folia end - block plugins not marked as supported
 
         return map;
     }
